let
  domain = "\${data.aws_route53_zone.selected.name}";

  mkResource = {
    name,
    records ? [],
    ttl ? "300",
    type ? "CNAME",
    zone_id ? "\${data.aws_route53_zone.selected.zone_id}"
  }: {
    inherit
      name
      records
      ttl
      type
      zone_id;
  };
in {
  # Resource attribute names must be unique for route53 resources in the cluster and therefore
  # should not be named after machines or book or group multivalue DNS names.
  #
  # Prefixing the resource attribute with the record type will avoid any namespace issues.

  # Book
  cname_book = mkResource {name = "book.${domain}"; records = ["misc1-webserver-a-1.${domain}"];};
  cname_book_staging = mkResource {name = "book-staging.${domain}"; records = ["misc1-webserver-a-1.${domain}"];};

  # Explorers
  cname_explorer_preprod = mkResource {name = "preprod-explorer.${domain}"; records = ["preprod1-dbsync-a-1.${domain}"];};
  cname_explorer_preview = mkResource {name = "preview-explorer.${domain}"; records = ["preview1-dbsync-a-1.${domain}"];};

  # Faucets
  cname_faucet_preprod = mkResource {name = "faucet.preprod.${domain}"; records = ["preprod1-faucet-a-1.${domain}"];};
  cname_faucet_preview = mkResource {name = "faucet.preview.${domain}"; records = ["preview1-faucet-a-1.${domain}"];};

  # Govtool

  # Ipfs for all testnets
  cname_metadata_ipfs = mkResource {name = "ipfs.${domain}"; records = ["misc1-metadata-a-1.${domain}"];};

  # Metadata for all testnets
  cname_metadata_testnets = mkResource {name = "metadata.${domain}"; records = ["misc1-metadata-a-1.${domain}"];};

  # Smash
  cname_smash_preprod = mkResource {name = "preprod-smash.${domain}"; records = ["preprod1-dbsync-a-1.${domain}"];};
  cname_smash_preview = mkResource {name = "preview-smash.${domain}"; records = ["preview1-dbsync-a-1.${domain}"];};
}
